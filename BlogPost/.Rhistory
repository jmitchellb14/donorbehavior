custom.coef.map = list("sqrt_distance_to_focal_point" = "Distance to Focal Point (sqrt, km"),
custom.gof.rows = list("Covariates" = c("No", "No", "Yes", "Yes"),
"Governate" = c("No", "Yes", "No", "Yes"),
"F Statistic" = c("211.802***",
"24.670***",
"28.629***",
"23.834***")),
override.se = list(robust_se1[2],robust_se2[2],robust_se3[2],robust_se4[2]))
Table1 <- screenreg(list(model1, model2, model3, model4),
digits = 3,
custom.model.names = c("Model 1", "Model 2" , "Model 3" , "Model 4"),
custom.coef.map = list("sqrt_distance_to_focal_point" = "Distance to Focal Point (sqrt, km"),
custom.gof.rows = list("Covariates" = c("No", "No", "Yes", "Yes"),
"Governate" = c("No", "Yes", "No", "Yes"),
"F Statistic" = c("211.802***",
"24.670***",
"28.629***",
"23.834***")),
override.se = list(robust_se1[2],robust_se2[2],robust_se3[2],robust_se4[2]))
Table1
list(robust_se1[2],robust_se2[2],robust_se3[2],robust_se4[2]
robust_se1[2]
robust_se1[2]
robust_se2[2]
Table1 <- screenreg(list(model1, model2, model3, model4),
digits = 3,
custom.model.names = c("Model 1", "Model 2" , "Model 3" , "Model 4"),
custom.coef.map = list("sqrt_distance_to_focal_point" = "Distance to Focal Point (sqrt, km"),
custom.gof.rows = list("Covariates" = c("No", "No", "Yes", "Yes"),
"Governate" = c("No", "Yes", "No", "Yes"),
"F Statistic" = c("211.802***",
"24.670***",
"28.629***",
"23.834***")),
override.se = list(robust_se1[2],robust_se2[2],robust_se3[2],robust_se4[2]))
Table1
Table1 <- screenreg(list(model1, model2, model3, model4),
digits = 3,
custom.model.names = c("Model 1", "Model 2" , "Model 3" , "Model 4"),
custom.coef.map = list("sqrt_distance_to_focal_point" = "Distance to Focal Point (sqrt, km"),
custom.gof.rows = list("Covariates" = c("No", "No", "Yes", "Yes"),
"Governate" = c("No", "Yes", "No", "Yes"),
"F Statistic" = c("211.802***",
"24.670***",
"28.629***",
"23.834***")),
override.se = c(robust_se1[2],robust_se2[2],robust_se3[2],robust_se4[2]))
Table1
robust_se1[2]
robust_se2[2]
robust_se3[2]
robust_se4[2]
Table1 <- screenreg(list(model1, model2, model3, model4),
digits = 3,
custom.model.names = c("Model 1", "Model 2" , "Model 3" , "Model 4"),
custom.coef.map = list("sqrt_distance_to_focal_point" = "Distance to Focal Point (sqrt, km"),
custom.gof.rows = list("Covariates" = c("No", "No", "Yes", "Yes"),
"Governate" = c("No", "Yes", "No", "Yes"),
"F Statistic" = c("211.802***",
"24.670***",
"28.629***",
"23.834***")),
override.se = c(0.0295581,0.03559214,0.02963065,0.03373553))
Table1
Table1 <- screenreg(list(model1, model2, model3, model4),
digits = 3,
custom.model.names = c("Model 1", "Model 2" , "Model 3" , "Model 4"),
override.se = c(0.0295581,0.03559214,0.02963065,0.03373553),
custom.coef.map = list("sqrt_distance_to_focal_point" = "Distance to Focal Point (sqrt, km"),
custom.gof.rows = list("Covariates" = c("No", "No", "Yes", "Yes"),
"Governate" = c("No", "Yes", "No", "Yes"),
"F Statistic" = c("211.802***",
"24.670***",
"28.629***",
"23.834***")))
Table1
robust_se1[2]
robust_se2[2]
robust_se3[2]
robust_se4[2]
Table1 <- screenreg(list(model1, model2, model3, model4),
digits = 3,
custom.model.names = c("Model 1", "Model 2" , "Model 3" , "Model 4"),
override.se = list(0.0295581,0.03559214,0.02963065,0.03373553),
custom.coef.map = list("sqrt_distance_to_focal_point" = "Distance to Focal Point (sqrt, km"),
custom.gof.rows = list("Covariates" = c("No", "No", "Yes", "Yes"),
"Governate" = c("No", "Yes", "No", "Yes"),
"F Statistic" = c("211.802***",
"24.670***",
"28.629***",
"23.834***")))
Table1
Table1 <- screenreg(list(model1, model2, model3, model4),
digits = 3,
custom.model.names = c("Model 1", "Model 2" , "Model 3" , "Model 4"),
override.se = list(c(0.0295581),c(0.03559214),c(0.02963065),c(0.03373553)),
custom.coef.map = list("sqrt_distance_to_focal_point" = "Distance to Focal Point (sqrt, km"),
custom.gof.rows = list("Covariates" = c("No", "No", "Yes", "Yes"),
"Governate" = c("No", "Yes", "No", "Yes"),
"F Statistic" = c("211.802***",
"24.670***",
"28.629***",
"23.834***")))
Table1
setable1 <- robust_se1[2]+robust_se2[2]+robust_se3[2]+robust_se4[2]
setable1
setable1 <- as.numeric(c(robust_se1[2],robust_se2[2],robust_se3[2],robust_se4[2]))
setable1
Table1 <- screenreg(list(model1, model2, model3, model4),
digits = 3,
custom.model.names = c("Model 1", "Model 2" , "Model 3" , "Model 4"),
override.se = setable1,
custom.coef.map = list("sqrt_distance_to_focal_point" = "Distance to Focal Point (sqrt, km"),
custom.gof.rows = list("Covariates" = c("No", "No", "Yes", "Yes"),
"Governate" = c("No", "Yes", "No", "Yes"),
"F Statistic" = c("211.802***",
"24.670***",
"28.629***",
"23.834***")))
Table1
Table1 <- screenreg(list(model1, model2, model3, model4),
digits = 3,
custom.model.names = c("Model 1", "Model 2" , "Model 3" , "Model 4"),
override.se = list(setable1),
custom.coef.map = list("sqrt_distance_to_focal_point" = "Distance to Focal Point (sqrt, km"),
custom.gof.rows = list("Covariates" = c("No", "No", "Yes", "Yes"),
"Governate" = c("No", "Yes", "No", "Yes"),
"F Statistic" = c("211.802***",
"24.670***",
"28.629***",
"23.834***")))
Table1
# Adjust standard errors
cov1         <- vcovHC(model1, type = "HC0", cluster = "q2")
cov1
robust_se1
cov1
cov3
robust_se3
Table1 <- screenreg(list(model1, model2, model3, model4),
digits = 3,
custom.model.names = c("Model 1", "Model 2" , "Model 3" , "Model 4"),
override.se = list(robust_se1, robust_se2, robust_se3,robust_se4),
custom.coef.map = list("sqrt_distance_to_focal_point" = "Distance to Focal Point (sqrt, km"),
custom.gof.rows = list("Covariates" = c("No", "No", "Yes", "Yes"),
"Governate" = c("No", "Yes", "No", "Yes"),
"F Statistic" = c("211.802***",
"24.670***",
"28.629***",
"23.834***")))
Table1
model8 <- lm(attitude_to_democracy~sqrt_all_protest_events, data = rep_data)
stargazer(model8, type = "text")
model8 <- lm(formula = formulaM8, data = rep_data)
#construct formula for model8, which contains governate dummies and controls and run model
formulaM8 <- as.formula(paste(y,
paste(M8_predictors, collapse = "+"),
sep = " ~ "))
#create model 8 which is a without the IV
#change the outcome variable to the DV
y <- "attitude_to_democracy"
x <- "sqrt_all_protest_events"
M8_predictors <- c(x,covars, governate)
#construct formula for model8, which contains governate dummies and controls and run model
formulaM8 <- as.formula(paste(y,
paste(M8_predictors, collapse = "+"),
sep = " ~ "))
model8 <- lm(formula = formulaM8, data = rep_data)
summary(model8)
x <- "sqrt_all_protest_events"
M9_predictors <- c(x, covars, governate)
formulaM9 <- as.formula(paste(y,
paste(M9_predictors, collapse = "+"),
sep = " ~ "))
rep_data$sqrt_all_protest_events <- model4$fitted.values
model9_data <- rep_data %>% na.omit()
model9_data$$sqrt_all_protest_events <- model4$fitted.values
model9_data$sqrt_all_protest_events <- model4$fitted.values
model9 <- lm(formula = formulaM9, data = model9_df)
model9 <- lm(formula = formulaM9, data = model9_data)
screenreg(list(model8, model4, model9),
digits = 3,
custom.model.names = c("No Instrument: OLS",
"1st Stage: OLS" ,
"2nd Stage: 2SLS"),
custom.coef.map = list("sqrt_all_protest_events" = "Protest Events (sqrt)",
"sqrt_distance_to_focal_point" = "Distance to Focal Point (sqrt, km"),
custom.header = list("Model 1" = 1:1, "Model 9" = 2:3))
screenreg(list(model8, model4, model9),
digits = 3,
custom.model.names = c("No Instrument: OLS",
"1st Stage: OLS" ,
"2nd Stage: 2SLS"),
custom.coef.map = list("sqrt_all_protest_events" = "Protest Events (sqrt)",
"sqrt_distance_to_focal_point" = "Distance to Focal Point (sqrt, km"),
custom.header = list("Model 8" = 1:1, "Model 9" = 2:3),
custom.gof.rows = list("Covariates" = c("No", "No", "Yes", "Yes"),
"Governate" = c("No", "Yes", "No", "Yes"),
"F Statistic" = c("211.802***",
"24.670***",
"28.629***",
"23.834***")))
Table1 <- screenreg(list(model1, model2, model3, model4),
digits = 3,
custom.model.names = c("Model 1", "Model 2" , "Model 3" , "Model 4"),
override.se = list(robust_se1, robust_se2, robust_se3,robust_se4),
custom.coef.map = list("sqrt_distance_to_focal_point" = "Distance to Focal Point (sqrt, km"),
custom.gof.rows = list("Covariates" = c("No", "No", "Yes", "Yes"),
"Governate Effects" = c("No", "Yes", "No", "Yes"),
"F Statistic" = c("211.802***",
"24.670***",
"28.629***",
"23.834***")))
Table1
Table1 <- screenreg(list(model1, model2, model3, model4),
digits = 3,
custom.model.names = c("Model 1", "Model 2" , "Model 3" , "Model 4"),
override.se = list(robust_se1, robust_se2, robust_se3,robust_se4),
custom.coef.map = list("sqrt_distance_to_focal_point" = "Distance to Focal Point (sqrt, km"),
custom.gof.rows = list("Covariates" = c("No", "No", "Yes", "Yes"),
"Governate Effects" = c("No", "Yes", "No", "Yes")))
Table1
Table1 <- screenreg(list(model1, model2, model3, model4),
digits = 3,
custom.model.names = c("Model 1", "Model 2" , "Model 3" , "Model 4"),
override.se = list(robust_se1, robust_se2, robust_se3,robust_se4),
custom.coef.map = list("sqrt_distance_to_focal_point" = "Distance to Focal Point (sqrt, km"),
custom.gof.rows = list("Covariates" = c("No", "No", "Yes", "Yes"),
"Governate Effects" = c("No", "Yes", "No", "Yes"),
"N" = c(1,040,1,040,1,040,)))
Table1 <- screenreg(list(model1, model2, model3, model4),
digits = 3,
custom.model.names = c("Model 1", "Model 2" , "Model 3" , "Model 4"),
override.se = list(robust_se1, robust_se2, robust_se3,robust_se4),
custom.coef.map = list("sqrt_distance_to_focal_point" = "Distance to Focal Point (sqrt, km"),
custom.gof.rows = list("Covariates" = c("No", "No", "Yes", "Yes"),
"Governate Effects" = c("No", "Yes", "No", "Yes"),
"N" = c(1040,1040,1040,)))
Table1 <- screenreg(list(model1, model2, model3, model4),
digits = 3,
custom.model.names = c("Model 1", "Model 2" , "Model 3" , "Model 4"),
override.se = list(robust_se1, robust_se2, robust_se3,robust_se4),
custom.coef.map = list("sqrt_distance_to_focal_point" = "Distance to Focal Point (sqrt, km"),
custom.gof.rows = list("Covariates" = c("No", "No", "Yes", "Yes"),
"Governate Effects" = c("No", "Yes", "No", "Yes"),
"N" = c("1040","1040","1040",)))
Table1 <- screenreg(list(model1, model2, model3, model4),
digits = 3,
custom.model.names = c("Model 1", "Model 2" , "Model 3" , "Model 4"),
override.se = list(robust_se1, robust_se2, robust_se3,robust_se4),
custom.coef.map = list("sqrt_distance_to_focal_point" = "Distance to Focal Point (sqrt, km"),
custom.gof.rows = list("Covariates" = c("No", "No", "Yes", "Yes"),
"Governate Effects" = c("No", "Yes", "No", "Yes"),
"N" = c("1040","1040","1040")))
Table1 <- screenreg(list(model1, model2, model3, model4),
digits = 3,
custom.model.names = c("Model 1", "Model 2" , "Model 3" , "Model 4"),
override.se = list(robust_se1, robust_se2, robust_se3,robust_se4),
custom.coef.map = list("sqrt_distance_to_focal_point" = "Distance to Focal Point (sqrt, km"),
custom.gof.rows = list("Covariates" = c("No", "No", "Yes", "Yes"),
"Governate Effects" = c("No", "Yes", "No", "Yes"),
"F Statistic" = c("211.802***",
"24.670***",
"28.629***",
"23.834***")))
Table1
screenreg(list(model8, model4, model9),
digits = 3,
custom.model.names = c("No Instrument: OLS",
"1st Stage: OLS" ,
"2nd Stage: 2SLS"),
custom.coef.map = list("sqrt_all_protest_events" = "Protest Events (sqrt)",
"sqrt_distance_to_focal_point" = "Distance to Focal Point (sqrt, km"),
custom.header = list("Model 8" = 1:1, "Model 9" = 2:3),
custom.gof.rows = list("Covariates" = c("Yes", "Yes", "Yes"),
"Governate Effects" = c("Yes","Yes","Yes"),
"N" = c(1040,1040,1040)
))
screenreg(list(model8, model4, model9),
digits = 3,
custom.model.names = c("No Instrument: OLS",
"1st Stage: OLS" ,
"2nd Stage: 2SLS"),
custom.coef.map = list("sqrt_all_protest_events" = "Protest Events (sqrt)",
"sqrt_distance_to_focal_point" = "Distance to Focal Point (sqrt, km"),
custom.header = list("Model 8" = 1:1, "Model 9" = 2:3),
custom.gof.rows = list("Covariates" = c("Yes", "Yes", "Yes"),
"Governate Effects" = c("Yes","Yes","Yes"),
"N" = c(1040,1040,1040)
),
include.rsquared = F,
include.adjrs = TRUE,
include.nobs = F)
screenreg(list(model8, model4, model9),
digits = 3,
custom.model.names = c("No Instrument: OLS",
"1st Stage: OLS" ,
"2nd Stage: 2SLS"),
custom.coef.map = list("sqrt_all_protest_events" = "Protest Events (sqrt)",
"sqrt_distance_to_focal_point" = "Distance to Focal Point (sqrt, km"),
custom.header = list("Model 8" = 1:1, "Model 9" = 2:3),
custom.gof.rows = list("Covariates" = c("Yes", "Yes", "Yes"),
"Governate Effects" = c("Yes","Yes","Yes"),
"N" = c(1040,1040,1040)
),
include.rsquared = T,
include.adjrs = F,
include.nobs = F,)
screenreg(list(model8, model4, model9),
digits = 3,
custom.model.names = c("No Instrument: OLS",
"1st Stage: OLS" ,
"2nd Stage: 2SLS"),
custom.coef.map = list("sqrt_all_protest_events" = "Protest Events (sqrt)",
"sqrt_distance_to_focal_point" = "Distance to Focal Point (sqrt, km"),
custom.header = list("Model 8" = 1:1, "Model 9" = 2:3),
include.rsquared = F,
include.adjrs = F,
include.nobs = F,
custom.gof.rows = list("Covariates" = c("Yes", "Yes", "Yes"),
"Governate Effects" = c("Yes","Yes","Yes"),
"N" = c(1040,1040,1040),
"" = c("0.236", "-", "-")
))
screenreg(list(model8, model4, model9),
digits = 3,
custom.model.names = c("No Instrument: OLS",
"1st Stage: OLS" ,
"2nd Stage: 2SLS"),
custom.coef.map = list("sqrt_all_protest_events" = "Protest Events (sqrt)",
"sqrt_distance_to_focal_point" = "Distance to Focal Point (sqrt, km"),
custom.header = list("Model 8" = 1:1, "Model 9" = 2:3),
include.rsquared = F,
include.adjrs = F,
include.nobs = F,
custom.gof.rows = list("Covariates" = c("Yes", "Yes", "Yes"),
"Governate Effects" = c("Yes","Yes","Yes"),
"N" = c(1040,1040,1040),
"R-squared" = c("0.236", "-", "-")
))
stargazer::stargazer(model1,model2,model3,model4, type = "text",
omit = c(covars, governate, "Constant"))
cov8         <- vcovHC(model1, type = "HC0", cluster = "q2")
robust_se8    <- sqrt(diag(cov1))
cov9         <- vcovHC(model2, type = "HC0", cluster = "q2")
robust_se9    <- sqrt(diag(cov2))
screenreg(list(model8, model4, model9),
digits = 3,
override.se = list(robust_se8, robust_se4, robust_se9)
custom.model.names = c("No Instrument: OLS",
screenreg(list(model8, model4, model9),
digits = 3,
override.se = list(robust_se8, robust_se4, robust_se9),
custom.model.names = c("No Instrument: OLS",
"1st Stage: OLS" ,
"2nd Stage: 2SLS"),
custom.coef.map = list("sqrt_all_protest_events" = "Protest Events (sqrt)",
"sqrt_distance_to_focal_point" = "Distance to Focal Point (sqrt, km"),
custom.header = list("Model 8" = 1:1, "Model 9" = 2:3),
include.rsquared = F,
include.adjrs = F,
include.nobs = F,
custom.gof.rows = list("Covariates" = c("Yes", "Yes", "Yes"),
"Governate Effects" = c("Yes","Yes","Yes"),
"N" = c(1040,1040,1040),
"R-squared" = c("0.236", "-", "-")
))
Table1
Table1 <- htmlreg(list(model1, model2, model3, model4),
digits = 3,
custom.model.names = c("Model 1", "Model 2" , "Model 3" , "Model 4"),
override.se = list(robust_se1, robust_se2, robust_se3,robust_se4),
custom.coef.map = list("sqrt_distance_to_focal_point" = "Distance to Focal Point (sqrt, km)"),
custom.gof.rows = list("Covariates" = c("No", "No", "Yes", "Yes"),
"Governate Effects" = c("No", "Yes", "No", "Yes"),
"F Statistic" = c("211.802***",
"24.670***",
"28.629***",
"23.834***")))
Table1
Table1
Table1 <- htmlreg(list(model1, model2, model3, model4),
digits = 3,
custom.model.names = c("Model 1", "Model 2" , "Model 3" , "Model 4"),
override.se = list(robust_se1, robust_se2, robust_se3,robust_se4),
custom.coef.map = list("sqrt_distance_to_focal_point" = "Distance to Focal Point (sqrt, km)"),
custom.gof.rows = list("Covariates" = c("No", "No", "Yes", "Yes"),
"Governate Effects" = c("No", "Yes", "No", "Yes"),
"F Statistic" = c("211.802***",
"24.670***",
"28.629***",
"23.834***")))
Table1
Table1
Table3 <- htmlreg(list(model8, model4, model9),
digits = 3,
override.se = list(robust_se8, robust_se4, robust_se9),
custom.model.names = c("No Instrument: OLS",
"1st Stage: OLS" ,
"2nd Stage: 2SLS"),
custom.coef.map = list("sqrt_all_protest_events" = "Protest Events (sqrt)",
"sqrt_distance_to_focal_point" = "Distance to Focal Point (sqrt, km"),
custom.header = list("Model 8" = 1:1, "Model 9" = 2:3),
include.rsquared = F,
include.adjrs = F,
include.nobs = F,
custom.gof.rows = list("Covariates" = c("Yes", "Yes", "Yes"),
"Governate Effects" = c("Yes","Yes","Yes"),
"N" = c(1040,1040,1040),
"R-squared" = c("0.236", "-", "-")
))
Table3
#attempt two
TableA1 <- stargazer::stargazer(rep_df, type = "html",
summary.stat = c("mean", "sd", "min", "max"),
digits = 2)
stargazer::stargazer(rep_df, type = "text",
summary.stat = c("mean", "sd", "min", "max"),
digits = 2)
stargazer::stargazer(rep_df, type = "html",
summary.stat = c("mean", "sd", "min", "max"),
digits = 2,
column.sep.width = "10pt")
stargazer::stargazer(rep_df, type = "latex",
summary.stat = c("mean", "sd", "min", "max"),
digits = 2,
column.sep.width = "10pt")
rm(list = ls())
install.packages("devtools") # unless you have it already
library(devtools)
install_github("jtextor/dagitty/r")
library(ggdag)
tidy_dagitty(dagified)
gui/dags.html
library(dagitty)
install.packages("ggdag")
library(ggdag)
dagified <- dagify(x ~ z,
y ~ z,
exposure = "x",
outcome = "y")
tidy_dagitty(dagified)
rm(list = ())
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE)
dag {
dag {
testImplications <- function( covariance.matrix, sample.size ){
library(ggm)
tst <- function(i){ pcor.test( pcor(i,covariance.matrix), length(i)-2, sample.size )$pvalue }
tos <- function(i){ paste(i,collapse=" ") }
implications <- list(c("D (i, 2012)","Y (i,2016)","D (i, 2016)","D (i, 2014)"),
c("D (i, 2012)","Y (i,2018)","D (i, 2018)","D (i, 2016)"),
c("D (i, 2014)","Y (i,2012)","D (i, 2012)"),
c("D (i, 2014)","Y (i,2018)","D (i, 2018)","D (i, 2016)"),
c("D (i, 2016)","Y (i,2012)","D (i, 2012)"),
c("D (i, 2016)","Y (i,2014)","D (i, 2014)","D (i, 2012)"),
c("D (i, 2018)","Y (i,2012)","D (i, 2012)"),
c("D (i, 2018)","Y (i,2014)","D (i, 2014)","D (i, 2012)"),
c("D (i, 2018)","Y (i,2016)","D (i, 2016)","D (i, 2014)"),
c("Y (i,2012)","Y (i,2014)","D (i, 2012)"),
c("Y (i,2012)","Y (i,2016)","D (i, 2016)","D (i, 2014)"),
c("Y (i,2012)","Y (i,2016)","D (i, 2012)"),
c("Y (i,2012)","Y (i,2018)","D (i, 2018)","D (i, 2016)"),
c("Y (i,2012)","Y (i,2018)","D (i, 2012)"),
c("Y (i,2014)","Y (i,2016)","D (i, 2016)","D (i, 2014)"),
c("Y (i,2014)","Y (i,2016)","D (i, 2014)","D (i, 2012)"),
c("Y (i,2014)","Y (i,2018)","D (i, 2018)","D (i, 2016)"),
c("Y (i,2014)","Y (i,2018)","D (i, 2014)","D (i, 2012)"),
c("Y (i,2016)","Y (i,2018)","D (i, 2018)","D (i, 2016)"),
c("Y (i,2016)","Y (i,2018)","D (i, 2014)","D (i, 2016)"))
data.frame( implication=unlist(lapply(implications,tos)),
pvalue=unlist( lapply( implications, tst ) ) )
}
setwd("C:/Users/jmitc/Desktop/Hertie Info/Hertie Summer Semester 2021/Machine Learning")
setwd("C:/Users/jmitc/Desktop/Hertie Info/Hertie Summer Semester 2021/Machine Learning/Final Report")
knitr::opts_chunk$set(echo = FALSE)
# Load dependencies
library(reticulate) # For rendering Python code
install.packages(reticulate)
install.packages("reticulate")
knitr::opts_chunk$set(echo = FALSE)
# Load dependencies
library(reticulate) # For rendering Python code
rmarkdown::pandoc_convert(
"Final Report (Final Version).tex",
to = "markdown",
output = "bertcnn-classifying-manifestos.md",
citeproc = TRUE
)
rmarkdown::pandoc_convert(
"Final Report (Final Version).tex",
to = "markdown",
output = "bertcnn-classifying-manifestos.md",
citeproc = TRUE
)
rmarkdown::pandoc_convert(
"Final Report (Final Version).tex",
to = "markdown",
output = "Final Report (Final Version).md",
citeproc = TRUE
)
update.packages(rmarkdown)
update.packages("rmarkdown")
library(rmarkdown)
knitr::opts_chunk$set(echo = FALSE)
# Load dependencies
library(reticulate) # For rendering Python code
update.packages(checkBuilt=TRUE, ask=FALSE)
install.packages("rtools")
library(RItools)
library(rmarkdown)
